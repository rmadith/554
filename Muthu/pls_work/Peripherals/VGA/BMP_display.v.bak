
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module BMP_display(

	//////////// CLOCK //////////
	input 		          		REF_CLK,

	//////////// KEY //////////
	input 						RST_n,	

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	input		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,

  input [9:0] xloc, 
  input [9:0] yloc,
  input add_fnt,
  input [5:0] fnt_indx,
  input add_img,
  input [5:0] image_indx,
  input rem_img,
  output busy,
  input clk,
  input rst_n
);

  ////////////////////////////////////
  // internal nets for connections //
  //////////////////////////////////
  wire pll_locked;					// PLL is locked on reference clock
  wire [9:0] xpix;					// current X coordinate of VGA
  wire [8:0] ypix;					// current Y coordinate of VGA
  wire [18:0] raddr;				// address into videoMem for reads (comes from VGA_timing)
  wire [5:0] rdata;					// 6-bit color
  wire [18:0] waddr;				// write address to videoMem
  wire [5:0] wdata;					// write data to videoMem
  wire we;                  // write enable signal
  reg [18:0] count;					// generate a pulse on add_img
  
  ////////////////////////////////////////////////////////
  // Instantiate PLL to generate clk and 25MHz VGA_CLK //
  //////////////////////////////////////////////////////
  // PLL iPLL(.refclk(REF_CLK), .rst(~RST_n),.outclk_0(clk),.outclk_1(VGA_CLK),
  //          .locked(pll_locked));
 
  /////////////////////////////////////
  // instantiate rst_n synchronizer //
  ///////////////////////////////////
  // rst_synch iRST(.clk(clk),.RST_n(RST_n), .pll_locked(pll_locked), .rst_n(rst_n));
 
  ///////////////////////////////////////
  // Instantiate VGA Timing Generator //
  /////////////////////////////////////
  VGA_timing iVGATM(.clk25MHz(VGA_CLK), .rst_n(rst_n), .VGA_BLANK_N(VGA_BLANK_N),
                    .VGA_HS(VGA_HS),.VGA_SYNC_N(VGA_SYNC_N), .VGA_VS(VGA_VS), 
					          .xpix(xpix), .ypix(ypix), .addr_lead(raddr));
					
  /////////////////////////////////////
  // Instantiate 9-bit video memory //
  ///////////////////////////////////
  videoMem(.clk(clk),.we(we),.waddr(waddr),.wdata(wdata),.raddr(raddr),.rdata(rdata));
  
  assign VGA_R = {rdata[5:4],6'b000000};
  assign VGA_G = {rdata[3:2],6'b000000};
  assign VGA_B = {rdata[1:0],6'b000000};
  
  ////////////////////////////////////////////////
  // Instantiate Logic that determines pixel   //
  // colors based on BMP placement and writes //
  // them into the video memory              //
  ////////////////////////////////////////////				
  PlaceBMP(.clk(clk),.rst_n(rst_n),.add_fnt(add_fnt),.fnt_indx(fnt_indx),
            .add_img(add_img),.rem_img(rem_img),.image_indx(image_indx),
            .xloc(xloc),.yloc(yloc),.waddr(waddr),.wdata(wdata),.we(we),
		        .busy(busy));

 endmodule
