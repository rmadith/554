# Compile of spart_tb.sv was successful.
vsim work.spart_tb -voptargs=+acc
# vsim work.spart_tb -voptargs="+acc" 
# Start time: 21:59:13 on Feb 21,2024
# doVOpenFlatFile(): INTERNAL ERROR: page load failed for file I:/win/554_git/Mini_1_1/work/@_opt/_deps (0:0 1:1 186 0 4623 1708469930 0x53:0x1)
# ** Warning: (vsim-56) Problem with optimized design dependency file "I:/win/554_git/Mini_1_1/work/@_opt/_deps" - file open failed.
# No such file or directory. (errno = ENOENT)
# ** Note: (vsim-3812) Design is being optimized...
# ** Note: (vopt-143) Recognized 1 FSM in module "RemoteComm(fast)".
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
add wave -position insertpoint sim:/spart_tb/*
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: ramnarayanan  Hostname: WIN-8120  ProcessID: 12268
#           Attempting to use alternate WLF file "./wlftm3ssab".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftm3ssab
view -new wave
# .main_pane.wave1.interior.cs.body.pw.wf
add wave -position insertpoint sim:/spart_tb/comms/*
add wave -position insertpoint sim:/spart_tb/comms/iUART/*
view -new wave
# .main_pane.wave2.interior.cs.body.pw.wf
add wave -position insertpoint sim:/spart_tb/iDUT/*
add wave -position insertpoint sim:/spart_tb/iDUT/iTxQueue/*
add wave -position insertpoint sim:/spart_tb/iDUT/iRxQueue/*
add wave -position insertpoint sim:/spart_tb/iDUT/iUART/*
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(290)
#    Time: 808335 ns  Iteration: 2  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 290
# Causality operation skipped due to absence of debug database file
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(290)
#    Time: 808335 ns  Iteration: 2  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 290
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly. Got: 01
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(290)
#    Time: 808335 ns  Iteration: 2  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 290
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly. Got: 01
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(290)
#    Time: 808335 ns  Iteration: 2  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 290
restart
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly. Got: 01
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(298)
#    Time: 808415 ns  Iteration: 2  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 298
run
# Correct Data Recieved by spart
# All test passed
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(323)
#    Time: 808425 ns  Iteration: 1  Instance: /spart_tb
# Break in Module spart_tb at I:/win/554_git/Mini_1_1/spart_tb.sv line 323
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly. Got: 01
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(299)
#    Time: 808425 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 299
# Compile of spart_tb.sv failed with 1 errors.
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# All test passed
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(327)
#    Time: 808435 ns  Iteration: 2  Instance: /spart_tb
# Break in Module spart_tb at I:/win/554_git/Mini_1_1/spart_tb.sv line 327
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Incorrect Data Recieved
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(337)
#    Time: 838035 ns  Iteration: 3  Instance: /spart_tb
# Break in NamedBeginStat test5 at I:/win/554_git/Mini_1_1/spart_tb.sv line 337
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Incorrect Data recieved
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(309)
#    Time: 808435 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 309
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# All test passed
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(354)
#    Time: 838055 ns  Iteration: 4  Instance: /spart_tb
# Break in Module spart_tb at I:/win/554_git/Mini_1_1/spart_tb.sv line 354
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly. Got: 80
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(300)
#    Time: 782825 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 300
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Status Registers working incorrectly. Got: 80
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(300)
#    Time: 782825 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test4 at I:/win/554_git/Mini_1_1/spart_tb.sv line 300
# Compile of spart.sv failed with 2 errors.
# Compile of spart.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Baud Rate Update failed
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(61)
#    Time: 55 ns  Iteration: 1  Instance: /spart_tb
# Break in Module spart_tb at I:/win/554_git/Mini_1_1/spart_tb.sv line 61
add wave -position insertpoint  \
sim:/spart_tb/iDUT/chng_sig1
add wave -position insertpoint  \
sim:/spart_tb/iDUT/chng_sig2
run -over
# Compile of spart.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Status Registers working incorrectly. Got: 80
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(384)
#    Time: 899535 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test6 at I:/win/554_git/Mini_1_1/spart_tb.sv line 384
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Status Registers working incorrectly. Got: 80
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(384)
#    Time: 899535 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test6 at I:/win/554_git/Mini_1_1/spart_tb.sv line 384
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
add wave -position insertpoint sim:/spart_tb/iDUT/iUART/iRX/*
# Error: invalid command name "::.main_pane.dataflow.interior.cs.body.pw.df.c"
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Status Registers working incorrectly. Got: 80
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(384)
#    Time: 899535 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test6 at I:/win/554_git/Mini_1_1/spart_tb.sv line 384
add wave -position insertpoint sim:/spart_tb/comms/iUART/iTX/*
restart
# ** Note: (vsim-8009) Loading existing optimized design _opt
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Status Registers working incorrectly. Got: 80
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(384)
#    Time: 899535 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat test6 at I:/win/554_git/Mini_1_1/spart_tb.sv line 384
# Compile of UART_tx.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Err: No Communication recieved
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(402)
#    Time: 988175 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat end6 at I:/win/554_git/Mini_1_1/spart_tb.sv line 402
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Random Test (not really anymore): Status Registers return correct value
# Correct Data Recieved by spart
# Err: No Communication recieved to RemoteComm
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(428)
#    Time: 1509145 ns  Iteration: 1  Instance: /spart_tb
# Break in NamedBeginStat end7 at I:/win/554_git/Mini_1_1/spart_tb.sv line 428
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Random Test (not really anymore): Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# All test passed
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(438)
#    Time: 1804075 ns  Iteration: 4  Instance: /spart_tb
# Break in Module spart_tb at I:/win/554_git/Mini_1_1/spart_tb.sv line 438
# Compile of spart_tb.sv failed with 1 errors.
# Compile of spart_tb.sv failed with 1 errors.
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Random Test (not really anymore): Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# Good, Different Baud Rates work. Now let us try to interleave them. In practcallity, who is actually going to do this?
# All test passed
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(481)
#    Time: 2361435 ns  Iteration: 4  Instance: /spart_tb
# Break in Module spart_tb at I:/win/554_git/Mini_1_1/spart_tb.sv line 481
# Compile of spart_tb.sv was successful.
restart
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# Loading sv_std.std
# Loading work.spart_tb(fast)
# Loading work.RemoteComm(fast)
# Loading work.UART(fast)
# Loading work.UART_tx(fast)
# Loading work.UART_rx(fast)
# Loading work.spart(fast)
# Loading work.circular_queue(fast)
run -all
# Mini Test 1: Baud Rate Update worked
# Lower bits of DB are correctly set
# Upper bits of DB are correctly set
# Mini test 2: Databus correctly returns Upper and Lower bits of Baud Rate
# Mini Test 3: Status Registers work as expected
# All mini tests work! SPART by itself should not have issues. Hopefully (!?)
# Remote Comm Sent value of 8'hB5 and SPART recieved it. RX, TX lines are hooked right
# Test 1: Sucess! Remote Comm sent values. SPART has recieved and stored only 8
# Test 2: Sucess! TX Queue populated
# Spart sent 1st 8 bits of data properly
# Spart sent 2nd 8 bits of data properly
# Only 8 transactions were sent. No Garbage values
# Official Test 3: At the same Baud Rate, SPART is sending data to RemoteComm
# Good, This means at the same Baud Rate, Bidirectional communication has been setup
# We will start different baud rates
# Random Test: Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# First Baud Rate Change Works, Onto the next! Exciting!
# Random Test (not really anymore): Status Registers return correct value
# Correct Data Recieved by spart
# Correct Data Recieved by RemoteComm!
# Good, Different Baud Rates work. Now let us try to interleave them. In practicallity, who is actually going to do this?
# Test Bench sent ACDC in hex (not ascii) on different baud rates. Yipee!
# We have tested interleaving of different baud rates from SPART to RemoteComm,I think we are done for now. Don't jinx it!
# Yahoo! All test passed
# ** Note: $stop    : I:/win/554_git/Mini_1_1/spart_tb.sv(481)
#    Time: 2361435 ns  Iteration: 4  Instance: /spart_tb
# Break in Module spart_tb at I:/win/554_git/Mini_1_1/spart_tb.sv line 481
